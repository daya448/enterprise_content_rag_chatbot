# https://python-poetry.org/docs/pyproject/

# PROJECT

[tool.poetry]
name = "ml-rnd-mcp"
version = "0.1.0"
description = "OpenAPI based MCP server"
repository = "https://github.com/elastic/ml-rnd-mcp"
documentation = "https://elastic.github.io/ml-rnd-mcp/"
authors = ["elastic"]
readme = "README.md"
license = "MIT"
packages = [{ include = "elastic/mcp/fastmcp", from = "src" }]

# DEPENDENCIES

[tool.poetry.dependencies]
python = "^3.10"
fastmcp = "^2.2.5"
dotenv = "^0.9.9"

[tool.poetry.group.tests.dependencies]
coverage = "^7.5.4"
pytest = "^8.2.2"
pytest-cov = "^5.0.0"
pytest-xdist = "^3.6.1"
pytest-html = "^4.1.1"
pytest-random-order = "^1.1.1"
pytest-profiling = "^1.7.0"
nox = "^2024.10.9"

[tool.poetry.group.dev.dependencies]
bandit = "^1.7.9"
mypy = "^1.10.1"
ruff = "^0.5.0"
commitizen = "^3.27.0"
pre-commit = "^3.7.1"
invoke = "^2.2.0"

[tool.poetry.group.docs.dependencies]
pdoc = "^14.5.1"

[tool.poetry.group.notebooks.dependencies]
ipykernel = "^6.29.4"
nbformat = "^5.10.4"

# CONFIGURATIONS

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = true

[tool.coverage.run]
branch = true
source = ["src"]
omit = ["__main__.py"]

[tool.mypy]
pretty = true
strict = true
python_version = "3.10"
check_untyped_defs = true
ignore_missing_imports = true
mypy_path = ["src"]


[tool.ruff]
fix = true
indent-width = 4
line-length = 102
target-version = "py310"
exclude = ["tasks/**","noxfile.py"]

[tool.ruff.lint]
select = [
    "A",
    "B",
    "C4",
    "C90",
    "D",
    "E",
    "F",
    "FA",
    "NPY",
    "PERF",
    "PIE",
    "PL",
    "PT",
    "Q",
    "RET",
    "RUF",
    "S",
    "SIM",
    "TD",
    "TID",
    "T10",
    "UP",
    "W",
    "YTT"
]
extend-select = [
    "I",  # see: isort
    "C4",  # see: https://pypi.org/project/flake8-comprehensions
    "SIM",  # see: https://pypi.org/project/flake8-simplify
    "RET",  # see: https://pypi.org/project/flake8-return
    "PT",  # see: https://pypi.org/project/flake8-pytest-style
    "RUF100",  # see: https://docs.astral.sh/ruff/rules/unused-noqa/
]
ignore = [
    "D100",
    "D104",
    "D107",
    "D202",
    "D105",
    "D401",
    "FA100",
    "RET504",
    "RUF013",
    "TD002",
    "TD003",
    "FIX002",
    "UP007",
    "UP038"
]
[tool.ruff.lint.per-file-ignores]
"tests/**" = ["S101","D100", "D103"]
[tool.ruff.lint.mccabe]
max-complexity = 10
[tool.ruff.lint.pylint]
max-args = 10
[tool.ruff.format]
docstring-code-format = true
[tool.ruff.lint.pydocstyle]
convention = "google"


# SYSTEMS

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
